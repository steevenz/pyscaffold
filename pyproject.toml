[build-system]
requires = ["setuptools>=69.0.2", "wheel>=0.42.0"]
build-backend = "setuptools.build_meta"

[project]
name = "pyscaffold"
version = "2.0.0"
description = "Ultimate Python Project Boilerplate Generator - Stop the boilerplate madness!"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Steeven Andrian Salim", email = "steevenz@ymail.com"},
]
maintainers = [
    {name = "Steeven Andrian Salim", email = "steevenz@ymail.com"},
]
keywords = [
    "python",
    "project-generator",
    "scaffolding",
    "boilerplate",
    "cli",
    "automation",
    "development-tools"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Code Generators",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",
]
dependencies = [
    "PyYAML>=6.0.1",
    "click>=8.1.7",
    "tqdm>=4.66.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.3",
    "pytest-cov>=4.1.0",
    "black>=23.11.0",
    "flake8>=6.1.0",
    "isort>=5.12.0",
    "mypy>=1.7.1",
]
ai = [
    "numpy>=1.24.3",
    "pandas>=2.1.3",
    "scikit-learn>=1.3.2",
    "tensorflow>=2.15.0",
    "torch>=2.1.1",
]
web = [
    "fastapi>=0.104.1",
    "uvicorn>=0.24.0",
    "requests>=2.31.0",
]
cli = [
    "argparse>=1.4.0",
    "colorama>=0.4.6",
]
automation = [
    "selenium>=4.15.2",
    "beautifulsoup4>=4.12.2",
]
docs = [
    "sphinx>=7.2.6",
    "sphinx-rtd-theme>=1.3.0",
]
all = [
    "pyscaffold[dev,ai,web,cli,automation,docs]"
]

[project.urls]
Homepage = "https://github.com/steevenz/pyscaffold"
Repository = "https://github.com/steevenz/pyscaffold.git"
Documentation = "https://github.com/steevenz/pyscaffold#readme"
"Bug Tracker" = "https://github.com/steevenz/pyscaffold/issues"

[project.scripts]
pyscaffold = "src.main:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"*" = ["*.yml", "*.yaml", "*.toml", "*.txt", "*.md", "*.tcss"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | venv
  )/
)
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tester",
]
python_files = [
    "test_*.py",
    "*_test.py",
]
python_classes = [
    "Test*",
]
python_functions = [
    "test_*",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/tester/*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/build/*",
    "*/dist/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\bProtocol\):",
    "@(abc\.)?abstractmethod",
]